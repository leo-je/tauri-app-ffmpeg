name: R elease

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    permissions:
      contents: write
    strategy:
      matrix:
        include:
          - platform: windows-latest
            target: x86_64-pc-windows-msvc
            args: '--target: x86_64-pc-windows-msvc'
          - platform: macos-latest
            target: x86_64-apple-darwin
            args: '--target: x86_64-apple-darwin'
    runs-on: ${{matrix.platform}}  # 使用 Windows 环境进行构建

    steps:
      # 检出代码
      - name: Checkout code
        uses: actions/checkout@v3

      # 设置 Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'  # 使用的 Node.js 版本

      # 安装 Tauri CLI 及依赖
      - name: Install Tauri CLI and dependencies
        run: |
          pwd
          npm install -g @tauri-apps/cli  # 安装 Tauri CLI
          npm install                   # 安装项目依赖

      # 安装 Rust 和相关工具链
      # - name: Set up Rust
      #   uses: actions/setup-rust@v1
      #   with:
      #     rust-version: '1.60.0'  # 使用的 Rust 版本
      - name: Install Rust target
        run: |
          rustup target add ${{matrix.target}}

      # 下载 ffmpeg 
      - name: dowm load ffmpeg for macos
        if: ${{ matrix.platform == 'macos-latest' }}
        run: |
          curl -L -o ffmpeg.zip https://evermeet.cx/ffmpeg/ffmpeg-118392-g0113e30806.zip
          mkdir -p "./src-tauri/assets/mac"
          7z x ffmpeg.zip -aoa -o"./ffmpeg-mac"
          cp -r "./ffmpeg-mac/ffmpeg" "./src-tauri/assets/mac/"

      # 下载 ffmpeg    
      - name: dowm load ffmpeg for windows
        if: ${{ matrix.platform == 'windows-latest' }}
        run: |
          curl -L -o ffmpeg.zip https://github.com/BtbN/FFmpeg-Builds/releases/download/latest/ffmpeg-master-latest-win64-gpl-shared.zip
          $FFMPEG_DIR = "./src-tauri/assets/win/ffmpeg"
          # 创建目标目录
          New-Item -Path "./src-tauri/assets/win/ffmpeg" -ItemType Directory -Force
          7z x ffmpeg.zip -aoa -o$FFMPEG_DIR
          ls "./src-tauri/assets/win/ffmpeg"
          7z x ffmpeg.zip -aoa -o"./ffmpeg"
          ls
          Copy-Item -Path "./ffmpeg" -Destination "./src-tauri/assets/win/ffmpeg" -Recurse -Force

      # 安装 Windows 依赖（如 Visual Studio 编译工具）
      - name: Install Windows Build Dependencies
        if: ${{ matrix.platform == 'windows-latest' }}
        run: |
          choco install visualstudio2019buildtools
          choco install windows-sdk-10.1

      # 使用 Tauri 构建应用
      - name: Build Tauri App
        run: |
          npm run tauri build

      #- name: tauri-build
        # You may pin to the exact commit or the version.
        # uses: JonasKruckenberg/tauri-build@406f9292d464c04add8c74e8ed1ed4105b91a20e
        #uses: JonasKruckenberg/tauri-build@v1.0.3

      # 上传构建的可执行文件作为 Artifact（可选）
      - name: Upload Windows Build Artifact-mac
        if: ${{ matrix.platform == 'macos-latest' }}
        uses: actions/upload-artifact@v4
        with:
          name: tauri-windows-build
          path: src-tauri\target\release\bundle\dmg\*.dmg  # 你要上传的构建文件路径

      # 上传构建的可执行文件作为 Artifact（可选）
      - name: Upload Windows Build Artifact-exe
        if: ${{ matrix.platform == 'windows-latest' }}
        uses: actions/upload-artifact@v4
        with:
          name: tauri-windows-build
          path: src-tauri\target\release\bundle\nsis\*.exe  # 你要上传的构建文件路径

      # 上传构建的可执行文件作为 Artifact（可选）
      #- name: Upload Windows Build Artifact-msi
       # uses: actions/upload-artifact@v4
       # with:
        #  name: tauri-windows-build
         # path: src-tauri\target\release\bundle\msi\*.msi  # 你要上传的构建文件路径
