name: main-test
on:
  push:
    branches:
      - test
  pull_request:
    branches:
      - test
    paths-ignore:
      - '**.md'
      - 'LICENSE'
  workflow_dispatch:


jobs:
  get_version:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      TZ: Asia/Shanghai
    outputs:
      version: ${{ steps.get_version.outputs.VERSION }}
      windows_version: ${{ steps.get_version.outputs.WINDOWSVERSION }}
      current_datetime: ${{ steps.get_version.outputs.CURRENT_DATETIME }}
      macos_version: ${{ steps.get_version.outputs.MACOSVERSION }}
      last_commit_msg: ${{ steps.get_version.outputs.LAST_COMMIT_INFO }}
      tagName: ${{ steps.get_version.outputs.TAG }}
      releaseBody: ${{ steps.get_version.outputs.RELEASE_BODY }}
      releaseName: ${{ steps.get_version.outputs.RELEASE_NAME }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: test

      - name: setting package info
        id: get_version
        run: |
          VERSION=$(jq -r '.version' package.json)
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "WINDOWSVERSION=$VERSION-${{github.run_number}}" >> $GITHUB_OUTPUT
          echo "MACOSVERSION=$VERSION-${{github.run_number}}" >> $GITHUB_OUTPUT
          CURRENT_DATETIME=$(date +"%Y%m%d %H:%M:%S")
          echo "CURRENT_DATETIME=$CURRENT_DATETIME" >> $GITHUB_OUTPUT
          LAST_COMMIT_INFO=$(git log -1 --pretty=format:'%an: %s ')
          echo "$LAST_COMMIT_INFO"
          echo "LAST_COMMIT_INFO=$LAST_COMMIT_INFO" >> $GITHUB_OUTPUT
          TAG="app-test-v$VERSION-${{github.run_number}}"
          echo "TAG=$TAG" >> $GITHUB_OUTPUT
          echo "Tag:$TAG"
          RELEASEBODY="version v$VERSION by test commit:$LAST_COMMIT_INFO,build number ${{ github.run_number }},time: $CURRENT_DATETIME"
          echo "RELEASEBODY: $RELEASEBODY"
          RELEASENAME="App version test v$VERSION-${{github.run_number}}"
          echo "RELEASENAME: $RELEASENAME"
          gh release create "$TAG" --target "test" --title "$RELEASENAME" --notes "$RELEASEBODY"
          echo "RELEASE_NAME=$RELEASENAME" >> $GITHUB_OUTPUT
          echo "RELEASE_BODY=$RELEASEBODY" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Create tag using custom action
      #   uses: ./.github/workflows/actions/create-tag-action
      #   with:
      #     tabName: 'test-v0.1.0'
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  dump_contexts_to_log:
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: echo "$MATRIX_CONTEXT"